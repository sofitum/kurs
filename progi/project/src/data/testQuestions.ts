export const testQuestions: Record<string, Array<{
  question: string;
  options: string[];
  correct: number;
  explanation: string;
}>> = {
  intro: [
    {
      question: "Как называется основная память компьютера?",
      options: ["ОЗУ", "ПЗУ", "Кэш-память", "Флеш-память"],
      correct: 0,
      explanation: "ОЗУ (Оперативное Запоминающее Устройство) - энергозависимая память для временного хранения данных и команд, с которыми работает процессор."
    },
    {
      question: "Какое поколение ЭВМ использовало интегральные схемы?",
      options: ["Первое", "Второе", "Третье", "Четвертое"],
      correct: 2,
      explanation: "Третье поколение (1960-1970-е) характеризовалось использованием интегральных схем вместо отдельных транзисторов."
    },
    {
      question: "Какой компонент выполняет декодирование инструкций?",
      options: ["АЛУ", "Блок управления", "Регистры", "Кэш-память"],
      correct: 1,
      explanation: "Блок управления (Control Unit) в составе CPU отвечает за декодирование и выполнение инструкций."
    },
    {
      question: "Что определяет тактовая частота процессора?",
      options: ["Скорость передачи данных", "Количество операций в секунду", "Объем памяти", "Разрядность"],
      correct: 1,
      explanation: "Тактовая частота показывает, сколько элементарных операций (тактов) процессор выполняет за секунду (измеряется в Гц)."
    },
    {
      question: "Какой принцип НЕ относится к фон-неймановской архитектуре?",
      options: [
        "Принцип программного управления",
        "Принцип однородного кода",
        "Принцип хранимой программы",
        "Принцип параллельных вычислений"
      ],
      correct: 3,
      explanation: "Параллельные вычисления стали активно использоваться позже и не являются частью классической архитектуры фон Неймана."
    },
    {
      question: "Что из перечисленного является энергонезависимой памятью?",
      options: ["ОЗУ", "Кэш L1", "ПЗУ", "Регистры процессора"],
      correct: 2,
      explanation: "ПЗУ (Постоянное Запоминающее Устройство) сохраняет данные при отключении питания, в отличие от ОЗУ."
    },
    {
      question: "Как называется минимальная единица информации?",
      options: ["Байт", "Ниббл", "Бит", "Слово"],
      correct: 2,
      explanation: "Бит (binary digit) принимает значение 0 или 1 и является минимальной неделимой единицей информации."
    },
    {
      question: "Какая шина передает данные между CPU и памятью?",
      options: ["Адресная", "Управления", "Данных", "Системная"],
      correct: 2,
      explanation: "Шина данных (Data Bus) используется для передачи информации между процессором и другими устройствами."
    },
    {
      question: "Какой тип памяти обладает наибольшей скоростью доступа?",
      options: ["ОЗУ", "Кэш L3", "Регистры", "SSD"],
      correct: 2,
      explanation: "Регистры процессора находятся непосредственно в CPU и обеспечивают наибыстрейший доступ."
    },
    {
      question: "Что характеризует разрядность процессора?",
      options: [
        "Количество ядер",
        "Размер адресного пространства",
        "Длину обрабатываемых данных",
        "Тактовую частоту"
      ],
      correct: 2,
      explanation: "Разрядность определяет длину слова (количество бит), которое процессор может обработать за одну операцию."
    },
    {
      question: "Какая система счисления используется в компьютерах?",
      options: ["Десятичная", "Двоичная", "Восьмеричная", "Шестнадцатеричная"],
      correct: 1,
      explanation: "Компьютеры используют двоичную систему счисления, где каждый разряд может принимать значение 0 или 1."
    },
    {
      question: "Что означает аббревиатура BIOS?",
      options: [
        "Basic Input Output System",
        "Binary Input Output System", 
        "Basic Internal Operating System",
        "Binary Internal Operating System"
      ],
      correct: 0,
      explanation: "BIOS (Basic Input Output System) - базовая система ввода-вывода, обеспечивающая начальную загрузку компьютера."
    },
    {
      question: "Какое устройство является примером устройства ввода?",
      options: ["Монитор", "Принтер", "Клавиатура", "Динамики"],
      correct: 2,
      explanation: "Клавиатура - это устройство ввода, позволяющее пользователю вводить данные в компьютер."
    },
    {
      question: "Что такое машинный код?",
      options: [
        "Код на языке программирования высокого уровня",
        "Двоичный код, понятный процессору",
        "Исходный код программы",
        "Код операционной системы"
      ],
      correct: 1,
      explanation: "Машинный код - это набор инструкций в двоичном формате, который может непосредственно выполняться процессором."
    },
    {
      question: "Какая единица измерения используется для тактовой частоты?",
      options: ["Байт", "Бит", "Герц", "Ватт"],
      correct: 2,
      explanation: "Тактовая частота измеряется в герцах (Гц), показывая количество тактов процессора в секунду."
    }
  ],
  'analog-digital': [
    {
      question: "Какой тип вычислителей использует непрерывные физические величины для представления данных?",
      options: ["Аналоговые", "Цифровые", "Гибридные", "Квантовые"],
      correct: 0,
      explanation: "Аналоговые компьютеры используют непрерывные физические величины (напряжение, ток) для представления данных."
    },
    {
      question: "Какое преимущество имеют цифровые компьютеры перед аналоговыми?",
      options: ["Высокая точность вычислений", "Быстрое решение дифференциальных уравнений", "Не требуют дискретизации", "Параллельная обработка данных"],
      correct: 0,
      explanation: "Цифровые компьютеры обеспечивают высокую точность вычислений, так как работают с дискретными значениями."
    },
    {
      question: "Какое устройство является примером аналогового вычислителя?",
      options: ["Счеты", "Логарифмическая линейка", "Механический калькулятор", "Арифмометр"],
      correct: 1,
      explanation: "Логарифмическая линейка - это пример аналогового вычислительного устройства."
    },
    {
      question: "Какая система счисления используется в цифровых компьютерах?",
      options: ["Десятичная", "Двоичная", "Восьмеричная", "Шестнадцатеричная"],
      correct: 1,
      explanation: "Цифровые компьютеры используют двоичную систему счисления (0 и 1) для представления и обработки данных."
    },
    {
      question: "Как называются компьютеры, сочетающие аналоговые и цифровые технологии?",
      options: ["Квантовые", "Гибридные", "Нейроморфные", "Оптические"],
      correct: 1,
      explanation: "Гибридные компьютеры сочетают в себе преимущества аналоговых и цифровых технологий."
    },
    {
      question: "Что является основным недостатком аналоговых компьютеров?",
      options: ["Высокая стоимость", "Низкая точность", "Большие размеры", "Высокое энергопотребление"],
      correct: 1,
      explanation: "Основной недостаток аналоговых компьютеров - ограниченная точность из-за шумов и дрейфа параметров."
    },
    {
      question: "Какой процесс преобразует аналоговый сигнал в цифровой?",
      options: ["Модуляция", "Дискретизация", "Фильтрация", "Усиление"],
      correct: 1,
      explanation: "Дискретизация - процесс преобразования непрерывного аналогового сигнала в дискретный цифровой."
    },
    {
      question: "Что определяет теорема Котельникова?",
      options: [
        "Минимальную частоту дискретизации",
        "Максимальную точность вычислений",
        "Скорость обработки данных",
        "Объем памяти"
      ],
      correct: 0,
      explanation: "Теорема Котельникова определяет минимальную частоту дискретизации для точного восстановления сигнала."
    },
    {
      question: "Какой тип компьютеров лучше подходит для моделирования физических процессов в реальном времени?",
      options: ["Цифровые", "Аналоговые", "Квантовые", "Оптические"],
      correct: 1,
      explanation: "Аналоговые компьютеры естественным образом моделируют непрерывные физические процессы в реальном времени."
    },
    {
      question: "Что такое квантование в цифровых системах?",
      options: [
        "Разделение сигнала по времени",
        "Округление значений до ближайших дискретных уровней",
        "Усиление сигнала",
        "Фильтрация шумов"
      ],
      correct: 1,
      explanation: "Квантование - процесс округления непрерывных значений до ближайших дискретных уровней."
    },
    {
      question: "Какое преимущество имеют аналоговые компьютеры в решении дифференциальных уравнений?",
      options: [
        "Высокая точность",
        "Низкая стоимость",
        "Естественный параллелизм",
        "Простота программирования"
      ],
      correct: 2,
      explanation: "Аналоговые компьютеры обладают естественным параллелизмом при решении дифференциальных уравнений."
    },
    {
      question: "Что такое нейроморфные процессоры?",
      options: [
        "Процессоры для нейрохирургии",
        "Гибридные аналогово-цифровые чипы, имитирующие нейроны",
        "Процессоры для обработки изображений",
        "Квантовые процессоры"
      ],
      correct: 1,
      explanation: "Нейроморфные процессоры - гибридные чипы, сочетающие аналоговые принципы работы нейронов с цифровым управлением."
    },
    {
      question: "В каком году была сформулирована теорема Котельникова?",
      options: ["1928", "1933", "1948", "1955"],
      correct: 1,
      explanation: "Теорема Котельникова была сформулирована в 1933 году, установив основы цифровой обработки сигналов."
    },
    {
      question: "Какой тип памяти используется в аналоговых компьютерах?",
      options: ["Цифровая память", "Конденсаторы", "Магнитные носители", "Оптические диски"],
      correct: 1,
      explanation: "В аналоговых компьютерах для хранения информации часто используются конденсаторы и другие аналоговые элементы."
    },
    {
      question: "Что является основным преимуществом цифровых систем при передаче данных?",
      options: [
        "Высокая скорость",
        "Устойчивость к помехам",
        "Низкая стоимость",
        "Простота реализации"
      ],
      correct: 1,
      explanation: "Цифровые сигналы более устойчивы к помехам, так как используют дискретные уровни сигнала."
    }
  ],
  hierarchy: [
    {
      question: "Какой уровень иерархии компьютера является самым нижним?",
      options: ["Аппаратное обеспечение", "Уровень операционной системы", "Уровень языков высокого уровня", "Уровень ассемблера"],
      correct: 0,
      explanation: "Самый нижний уровень иерархии - аппаратное обеспечение (hardware), на котором работают все вышележащие уровни."
    },
    {
      question: "Какой уровень предоставляет интерфейс для программирования на языках высокого уровня?",
      options: ["Уровень операционной системы", "Уровень ассемблера", "Уровень машинных команд", "Микропрограммный уровень"],
      correct: 0,
      explanation: "Уровень операционной системы предоставляет API (интерфейсы программирования приложений) для работы с языками высокого уровня."
    },
    {
      question: "Что из перечисленного НЕ является преимуществом иерархической организации?",
      options: ["Упрощение разработки", "Увеличение скорости работы", "Модульность компонентов", "Повышение надежности"],
      correct: 1,
      explanation: "Иерархическая организация улучшает структуру системы, но не гарантирует увеличение скорости работы."
    },
    {
      question: "Какой уровень отвечает за выполнение машинных команд?",
      options: ["Аппаратное обеспечение", "Микропрограммный уровень", "Уровень операционной системы", "Уровень языков высокого уровня"],
      correct: 1,
      explanation: "Микропрограммный уровень (микрокод) управляет выполнением машинных команд на процессоре."
    },
    {
      question: "Почему иерархическая организация упрощает разработку сложных систем?",
      options: [
        "Позволяет разделить ответственность между уровнями",
        "Уменьшает количество возможных ошибок",
        "Дает возможность разрабатывать уровни независимо",
        "Все перечисленное"
      ],
      correct: 3,
      explanation: "Все перечисленные факторы делают разработку сложных систем более управляемой благодаря иерархии."
    },
    {
      question: "Что понимается под 'виртуальной машиной' в контексте иерархии?",
      options: [
        "Программа эмуляции другого компьютера",
        "Абстрактное представление ресурсов уровня",
        "Облачный сервис",
        "Графический интерфейс пользователя"
      ],
      correct: 1,
      explanation: "Виртуальная машина - это абстракция, скрывающая детали нижележащего уровня и предоставляющая упрощенный интерфейс."
    },
    {
      question: "Какой процесс преобразует программы высокого уровня в машинный код?",
      options: ["Интерпретация", "Компиляция", "Ассемблирование", "Все перечисленное"],
      correct: 3,
      explanation: "Все три процесса могут использоваться для преобразования программ в машинный код на разных уровнях."
    },
    {
      question: "Что характеризует принцип абстракции в иерархии компьютера?",
      options: [
        "Скрытие деталей реализации нижних уровней",
        "Увеличение производительности",
        "Уменьшение стоимости",
        "Повышение надежности"
      ],
      correct: 0,
      explanation: "Принцип абстракции заключается в сокрытии сложности нижних уровней от верхних уровней."
    },
    {
      question: "Какой уровень иерархии непосредственно взаимодействует с электронными компонентами?",
      options: ["Микропрограммный", "Машинных команд", "Ассемблера", "Операционной системы"],
      correct: 0,
      explanation: "Микропрограммный уровень непосредственно управляет электронными компонентами процессора."
    },
    {
      question: "Что обеспечивает совместимость программ в рамках одной архитектуры?",
      options: [
        "Одинаковое аппаратное обеспечение",
        "Стандартизированный набор команд",
        "Одинаковая операционная система",
        "Одинаковый язык программирования"
      ],
      correct: 1,
      explanation: "Стандартизированный набор команд (ISA) обеспечивает совместимость программ в рамках архитектуры."
    },
    {
      question: "Какой тип трансляции выполняется во время выполнения программы?",
      options: ["Компиляция", "Ассемблирование", "Интерпретация", "Препроцессинг"],
      correct: 2,
      explanation: "Интерпретация выполняется во время работы программы, переводя команды 'на лету'."
    },
    {
      question: "Что такое микрокод?",
      options: [
        "Очень короткая программа",
        "Программа на микропроцессоре",
        "Низкоуровневые команды управления процессором",
        "Сжатый машинный код"
      ],
      correct: 2,
      explanation: "Микрокод - это набор низкоуровневых команд, управляющих работой процессора на аппаратном уровне."
    },
    {
      question: "Какой принцип лежит в основе многоуровневой организации?",
      options: [
        "Принцип суперпозиции",
        "Принцип иерархической декомпозиции",
        "Принцип параллелизма",
        "Принцип обратной связи"
      ],
      correct: 1,
      explanation: "Принцип иерархической декомпозиции позволяет разбить сложную систему на управляемые уровни."
    },
    {
      question: "Что происходит при переходе с одного уровня иерархии на другой?",
      options: [
        "Изменяется скорость работы",
        "Изменяется уровень абстракции",
        "Изменяется надежность",
        "Изменяется стоимость"
      ],
      correct: 1,
      explanation: "При переходе между уровнями изменяется степень абстракции и детализации представления системы."
    },
    {
      question: "Какой уровень отвечает за управление ресурсами компьютера?",
      options: [
        "Уровень приложений",
        "Уровень операционной системы", 
        "Уровень ассемблера",
        "Аппаратный уровень"
      ],
      correct: 1,
      explanation: "Операционная система управляет ресурсами компьютера: памятью, процессорным временем, устройствами ввода-вывода."
    }
  ],
  'architecture-organization': [
    {
      question: "Что определяет архитектура компьютера?",
      options: ["Функциональные возможности компьютера", "Способы реализации функциональных возможностей", "Физическое расположение компонентов", "Стоимость производства компьютера"],
      correct: 0,
      explanation: "Архитектура определяет функциональные возможности компьютера, видимые программисту (например, набор команд)."
    },
    {
      question: "Что из перечисленного относится к организации компьютера?",
      options: ["Набор команд процессора", "Схемы управления памятью", "Режимы адресации", "Типы данных"],
      correct: 1,
      explanation: "Схемы управления памятью относятся к организации (реализации), а не к архитектуре."
    },
    {
      question: "Какой компонент НЕ входит в классическую архитектуру фон Неймана?",
      options: ["Центральный процессор", "Память", "Устройства ввода/вывода", "Кэш-память"],
      correct: 3,
      explanation: "Кэш-память была добавлена позже для увеличения производительности."
    },
    {
      question: "Что характеризует принцип 'хранимой программы' по фон Нейману?",
      options: [
        "Программы хранятся отдельно от данных",
        "Программы и данные хранятся в одной памяти",
        "Программы вшиты в процессор",
        "Программы загружаются с внешних носителей"
      ],
      correct: 1,
      explanation: "Ключевая идея архитектуры фон Неймана - хранение программ и данных в общей памяти."
    },
    {
      question: "Как называется архитектура с раздельными памятью для команд и данных?",
      options: [
        "Фон Неймана",
        "Гарвардская",
        "Принстонская",
        "RISC"
      ],
      correct: 1,
      explanation: "Гарвардская архитектура использует раздельные памяти для команд и данных."
    },
    {
      question: "Какое преимущество дает гарвардская архитектура?",
      options: [
        "Упрощение программирования",
        "Параллельный доступ к командам и данным",
        "Уменьшение стоимости",
        "Увеличение объема памяти"
      ],
      correct: 1,
      explanation: "Гарвардская архитектура позволяет одновременно обращаться к памяти команд и данных."
    },
    {
      question: "Что такое 'узкое горлышко фон Неймана'?",
      options: [
        "Ограничение скорости процессора",
        "Ограничение пропускной способности между CPU и памятью",
        "Ограничение объема памяти",
        "Ограничение количества устройств ввода-вывода"
      ],
      correct: 1,
      explanation: "'Узкое горлышко фон Неймана' - это ограничение производительности из-за общей шины между процессором и памятью."
    },
    {
      question: "Какой компонент отвечает за выборку и декодирование команд?",
      options: ["АЛУ", "Устройство управления", "Регистры", "Кэш"],
      correct: 1,
      explanation: "Устройство управления (Control Unit) отвечает за выборку, декодирование и управление выполнением команд."
    },
    {
      question: "Что означает принцип программного управления?",
      options: [
        "Компьютер управляется программистом",
        "Последовательность операций определяется программой",
        "Программа управляет аппаратурой",
        "Операционная система управляет программами"
      ],
      correct: 1,
      explanation: "Принцип программного управления означает, что последовательность выполняемых операций определяется программой."
    },
    {
      question: "Какая шина передает информацию о том, какую операцию нужно выполнить?",
      options: ["Шина данных", "Адресная шина", "Шина управления", "Системная шина"],
      correct: 2,
      explanation: "Шина управления передает сигналы управления, определяющие тип выполняемой операции."
    },
    {
      question: "Что определяет разрядность адресной шины?",
      options: [
        "Скорость передачи данных",
        "Максимальный объем адресуемой памяти",
        "Количество одновременно передаваемых данных",
        "Тактовую частоту системы"
      ],
      correct: 1,
      explanation: "Разрядность адресной шины определяет максимальный объем памяти, который может адресовать процессор."
    },
    {
      question: "Какой принцип НЕ является основополагающим для архитектуры фон Неймана?",
      options: [
        "Двоичное кодирование",
        "Программное управление",
        "Хранимая программа",
        "Параллельное выполнение команд"
      ],
      correct: 3,
      explanation: "Параллельное выполнение команд не является частью классической архитектуры фон Неймана."
    },
    {
      question: "Что такое ISA (Instruction Set Architecture)?",
      options: [
        "Международный стандарт архитектуры",
        "Набор команд процессора",
        "Интегрированная системная архитектура",
        "Интерфейс системных приложений"
      ],
      correct: 1,
      explanation: "ISA (Instruction Set Architecture) - это набор команд процессора, видимый программисту."
    },
    {
      question: "Какое различие между архитектурой и микроархитектурой?",
      options: [
        "Архитектура - это аппаратура, микроархитектура - программы",
        "Архитектура видна программисту, микроархитектура - способ реализации",
        "Архитектура для больших компьютеров, микроархитектура для малых",
        "Никакого различия нет"
      ],
      correct: 1,
      explanation: "Архитектура определяет интерфейс для программиста, а микроархитектура - конкретную аппаратную реализацию."
    },
    {
      question: "Что обеспечивает совместимость программ в семействе процессоров?",
      options: [
        "Одинаковая микроархитектура",
        "Одинаковая архитектура (ISA)",
        "Одинаковая тактовая частота",
        "Одинаковый техпроцесс"
      ],
      correct: 1,
      explanation: "Совместимость программ обеспечивается одинаковой архитектурой команд (ISA), а не способом реализации."
    }
  ],
  'digital-elements': [
    {
      question: "Какой логический элемент выдает 1 только если все его входы равны 1?",
      options: ["И (AND)", "ИЛИ (OR)", "НЕ (NOT)", "Исключающее ИЛИ (XOR)"],
      correct: 0,
      explanation: "Логический элемент И (AND) выдает единицу только когда все входы равны единице."
    },
    {
      question: "Что из перечисленного является комбинационной схемой?",
      options: ["Триггер", "Счетчик", "Дешифратор", "Регистр"],
      correct: 2,
      explanation: "Дешифратор - комбинационная схема, выход которой зависит только от текущих входов."
    },
    {
      question: "Какой триггер изменяет состояние при подаче единицы на вход синхронизации?",
      options: ["RS-триггер", "D-триггер", "JK-триггер", "T-триггер"],
      correct: 1,
      explanation: "D-триггер (триггер задержки) запоминает состояние входа D при активном фронте синхросигнала."
    },
    {
      question: "Сколько выходов имеет дешифратор с n входами?",
      options: ["n", "2n", "2^n", "n^2"],
      correct: 2,
      explanation: "Дешифратор с n входами имеет 2^n выходов, так как может декодировать 2^n различных комбинаций."
    },
    {
      question: "Какая схема используется для выбора одного из нескольких входных сигналов?",
      options: ["Дешифратор", "Мультиплексор", "Демультиплексор", "Шифратор"],
      correct: 1,
      explanation: "Мультиплексор выбирает один из нескольких входных сигналов в зависимости от управляющих сигналов."
    },
    {
      question: "Какой элемент является базовым для построения цифровых схем?",
      options: ["Транзистор", "Резистор", "Конденсатор", "Диод"],
      correct: 0,
      explanation: "Транзистор является базовым элементом для построения логических вентилей и цифровых схем."
    },
    {
      question: "Что такое таблица истинности?",
      options: [
        "Таблица правильных ответов",
        "Таблица соответствия входов и выходов логической схемы",
        "Таблица проверки схемы на ошибки",
        "Таблица временных характеристик"
      ],
      correct: 1,
      explanation: "Таблица истинности показывает соответствие между всеми возможными комбинациями входов и выходами."
    },
    {
      question: "Какой тип триггера может находиться в запрещенном состоянии?",
      options: ["D-триггер", "JK-триггер", "RS-триггер", "T-триггер"],
      correct: 2,
      explanation: "RS-триггер имеет запрещенное состояние, когда оба входа R и S равны 1."
    },
    {
      question: "Что происходит в JK-триггере при J=1, K=1?",
      options: [
        "Устанавливается в 0",
        "Устанавливается в 1", 
        "Переключается в противоположное состояние",
        "Остается в прежнем состоянии"
      ],
      correct: 2,
      explanation: "При J=1, K=1 JK-триггер переключается в состояние, противоположное текущему."
    },
    {
      question: "Сколько входов имеет полный сумматор?",
      options: ["2", "3", "4", "5"],
      correct: 1,
      explanation: "Полный сумматор имеет 3 входа: два слагаемых и перенос от младшего разряда."
    },
    {
      question: "Какая схема преобразует двоичный код в унитарный?",
      options: ["Шифратор", "Дешифратор", "Мультиплексор", "Демультиплексор"],
      correct: 1,
      explanation: "Дешифратор преобразует n-разрядный двоичный код в сигнал на одной из 2^n выходных линий."
    },
    {
      question: "Что такое регистр сдвига?",
      options: [
        "Регистр для хранения адресов",
        "Регистр для арифметических операций",
        "Регистр для последовательного сдвига битов",
        "Регистр для хранения команд"
      ],
      correct: 2,
      explanation: "Регистр сдвига позволяет сдвигать биты влево или вправо, используется для умножения/деления на 2."
    },
    {
      question: "Какой элемент НЕ является последовательностной схемой?",
      options: ["Триггер", "Счетчик", "Регистр", "Дешифратор"],
      correct: 3,
      explanation: "Дешифратор - комбинационная схема, его выход зависит только от текущих входов."
    },
    {
      question: "Что определяет быстродействие цифровой схемы?",
      options: [
        "Количество элементов",
        "Время задержки распространения сигнала",
        "Потребляемая мощность",
        "Размер схемы"
      ],
      correct: 1,
      explanation: "Быстродействие определяется временем задержки распространения сигнала через логические элементы."
    },
    {
      question: "Какой код используется для представления десятичных цифр в BCD?",
      options: ["3-битный", "4-битный", "5-битный", "8-битный"],
      correct: 1,
      explanation: "BCD (Binary Coded Decimal) использует 4-битный код для представления каждой десятичной цифры."
    }
  ],
  cpu: [
    {
      question: "Как называется устройство процессора, выполняющее арифметические и логические операции?",
      options: ["Арифметико-логическое устройство (ALU)", "Устройство управления (CU)", "Регистровый файл", "Кэш-память"],
      correct: 0,
      explanation: "ALU (Arithmetic Logic Unit) - арифметико-логическое устройство выполняет все вычислительные операции в процессоре."
    },
    {
      question: "Что означает аббревиатура RISC?",
      options: ["Reduced Instruction Set Computer", "Random Instruction Set Computing", "Rapid Instruction Set Computer", "Reliable Instruction Set Computing"],
      correct: 0,
      explanation: "RISC означает Reduced Instruction Set Computer (Компьютер с сокращенным набором команд)."
    },
    {
      question: "Какая технология позволяет процессору выполнять несколько инструкций одновременно?",
      options: ["Конвейеризация", "Кэширование", "Виртуализация", "Мультиплексирование"],
      correct: 0,
      explanation: "Конвейеризация (pipelining) позволяет процессору выполнять несколько инструкций одновременно на разных стадиях."
    },
    {
      question: "Как называется регистр, хранящий текущую команду?",
      options: ["Регистр данных", "Регистр адреса", "Регистр команд", "Регистр флагов"],
      correct: 2,
      explanation: "Регистр команд (Instruction Register) хранит текущую выполняемую команду."
    },
    {
      question: "Какой параметр процессора измеряется в гигагерцах (GHz)?",
      options: ["Размер кэша", "Тактовая частота", "Количество ядер", "Тепловыделение"],
      correct: 1,
      explanation: "Тактовая частота процессора измеряется в гигагерцах (GHz) и показывает количество тактов в секунду."
    },
    {
      question: "Что такое суперскалярная архитектура?",
      options: [
        "Архитектура с очень высокой тактовой частотой",
        "Архитектура с несколькими исполнительными устройствами",
        "Архитектура с большим количеством регистров",
        "Архитектура с расширенным набором команд"
      ],
      correct: 1,
      explanation: "Суперскалярная архитектура имеет несколько исполнительных устройств для параллельного выполнения команд."
    },
    {
      question: "Какой регистр указывает на следующую выполняемую команду?",
      options: ["Аккумулятор", "Указатель команд (PC)", "Регистр флагов", "Индексный регистр"],
      correct: 1,
      explanation: "Указатель команд (Program Counter, PC) содержит адрес следующей выполняемой команды."
    },
    {
      question: "Что такое предсказание ветвлений?",
      options: [
        "Предсказание будущих команд",
        "Предсказание направления условных переходов",
        "Предсказание ошибок в программе",
        "Предсказание времени выполнения"
      ],
      correct: 1,
      explanation: "Предсказание ветвлений - технология предсказания направления условных переходов для оптимизации конвейера."
    },
    {
      question: "Какое преимущество имеет RISC-архитектура перед CISC?",
      options: [
        "Больший набор команд",
        "Более простые команды и быстрое выполнение",
        "Меньший размер программ",
        "Лучшая совместимость"
      ],
      correct: 1,
      explanation: "RISC использует простые команды фиксированной длины, что обеспечивает более быстрое выполнение."
    },
    {
      question: "Что такое внеочередное выполнение команд?",
      options: [
        "Выполнение команд в случайном порядке",
        "Выполнение команд не по порядку для оптимизации",
        "Выполнение только важных команд",
        "Пропуск некоторых команд"
      ],
      correct: 1,
      explanation: "Внеочередное выполнение позволяет выполнять команды не в исходном порядке для лучшего использования ресурсов."
    },
    {
      question: "Какой тип кэша находится ближе всего к ядру процессора?",
      options: ["L1", "L2", "L3", "L4"],
      correct: 0,
      explanation: "Кэш L1 (первого уровня) находится ближе всего к ядру процессора и имеет наименьшую задержку."
    },
    {
      question: "Что такое микрокод в процессоре?",
      options: [
        "Очень короткие программы",
        "Низкоуровневые команды управления процессором",
        "Сжатые машинные команды",
        "Команды для микропроцессоров"
      ],
      correct: 1,
      explanation: "Микрокод - набор низкоуровневых команд, которые управляют выполнением машинных инструкций."
    },
    {
      question: "Какая единица измерения характеризует производительность процессора?",
      options: ["MIPS", "FLOPS", "IPC", "Все перечисленные"],
      correct: 3,
      explanation: "MIPS (миллионы инструкций в секунду), FLOPS (операций с плавающей точкой в секунду) и IPC (инструкций за такт) - все характеризуют производительность."
    },
    {
      question: "Что происходит при промахе кэша?",
      options: [
        "Процессор останавливается",
        "Данные загружаются из более медленной памяти",
        "Программа завершается с ошибкой",
        "Данные теряются"
      ],
      correct: 1,
      explanation: "При промахе кэша данные загружаются из более медленной памяти (следующий уровень кэша или ОЗУ)."
    },
    {
      question: "Что такое гиперпоточность (Hyper-Threading)?",
      options: [
        "Очень быстрые потоки выполнения",
        "Технология одновременного выполнения нескольких потоков на одном ядре",
        "Использование множества ядер",
        "Ускорение работы с памятью"
      ],
      correct: 1,
      explanation: "Гиперпоточность позволяет одному физическому ядру одновременно выполнять несколько потоков команд."
    }
  ],
  memory: [
    {
      question: "Какой уровень иерархии памяти является самым быстрым?",
      options: ["Регистры", "Кэш L1", "Оперативная память (RAM)", "Жесткий диск (HDD)"],
      correct: 0,
      explanation: "Регистры процессора - самый быстрый уровень иерархии памяти, но и самый маленький по объему."
    },
    {
      question: "Какой тип памяти является энергонезависимым?",
      options: ["ОЗУ", "Кэш-память", "ПЗУ", "Регистры процессора"],
      correct: 2,
      explanation: "ПЗУ (Постоянное Запоминающее Устройство) - энергонезависимая память, сохраняющая данные при отключении питания."
    },
    {
      question: "Что такое виртуальная память?",
      options: [
        "Дополнительная физическая память",
        "Технология расширения адресного пространства",
        "Быстрая кэш-память",
        "Сетевое хранилище данных"
      ],
      correct: 1,
      explanation: "Виртуальная память - технология, позволяющая программам использовать больше памяти, чем физически доступно."
    },
    {
      question: "Какая политика замещения кэша означает 'наименее недавно использованный'?",
      options: ["FIFO", "LRU", "LIFO", "Random"],
      correct: 1,
      explanation: "LRU (Least Recently Used) - политика замещения, при которой удаляется наименее недавно использованная страница."
    },
    {
      question: "Как называется память, используемая для ускорения доступа к часто используемым данным?",
      options: ["ОЗУ", "ПЗУ", "Кэш-память", "Флеш-память"],
      correct: 2,
      explanation: "Кэш-память - быстродействующая память для временного хранения часто используемых данных."
    },
    {
      question: "Что такое страничная организация памяти?",
      options: [
        "Разделение памяти на страницы фиксированного размера",
        "Последовательное размещение данных",
        "Случайное размещение данных",
        "Размещение данных по алфавиту"
      ],
      correct: 0,
      explanation: "Страничная организация разделяет память на блоки (страницы) фиксированного размера для эффективного управления."
    },
    {
      question: "Какой размер обычно имеет кэш-линия?",
      options: ["16 байт", "32 байта", "64 байта", "128 байт"],
      correct: 2,
      explanation: "Типичный размер кэш-линии в современных процессорах составляет 64 байта."
    },
    {
      question: "Что происходит при обращении к странице, которой нет в физической памяти?",
      options: [
        "Программа завершается с ошибкой",
        "Возникает исключение страничного отказа",
        "Данные теряются",
        "Система перезагружается"
      ],
      correct: 1,
      explanation: "При обращении к отсутствующей странице возникает исключение страничного отказа (page fault)."
    },
    {
      question: "Какой тип ОЗУ требует периодического обновления данных?",
      options: ["SRAM", "DRAM", "MRAM", "FRAM"],
      correct: 1,
      explanation: "DRAM (Dynamic RAM) требует периодического обновления (refresh) для сохранения данных."
    },
    {
      question: "Что такое принцип локальности в контексте памяти?",
      options: [
        "Размещение данных в одном месте",
        "Тенденция программ обращаться к близко расположенным данным",
        "Использование только локальных переменных",
        "Работа только с локальной памятью"
      ],
      correct: 1,
      explanation: "Принцип локальности означает, что программы склонны обращаться к данным, расположенным рядом в памяти или времени."
    },
    {
      question: "Какая технология позволяет увеличить эффективную пропускную способность памяти?",
      options: ["Чередование банков памяти", "Увеличение частоты", "Увеличение разрядности", "Все перечисленное"],
      correct: 3,
      explanation: "Все перечисленные технологии способствуют увеличению эффективной пропускной способности памяти."
    },
    {
      question: "Что такое TLB в системе управления памятью?",
      options: [
        "Буфер трансляции адресов",
        "Таблица логических блоков",
        "Буфер загрузки данных",
        "Таблица линейных блоков"
      ],
      correct: 0,
      explanation: "TLB (Translation Lookaside Buffer) - буфер для ускорения трансляции виртуальных адресов в физические."
    },
    {
      question: "Какой фактор НЕ влияет на производительность системы памяти?",
      options: ["Латентность", "Пропускная способность", "Размер кэша", "Цвет корпуса"],
      correct: 3,
      explanation: "Цвет корпуса не влияет на производительность системы памяти, в отличие от технических характеристик."
    },
    {
      question: "Что такое ECC память?",
      options: [
        "Очень быстрая память",
        "Память с коррекцией ошибок",
        "Энергоэффективная память",
        "Расширенная кэш-память"
      ],
      correct: 1,
      explanation: "ECC (Error Correcting Code) память может обнаруживать и исправлять ошибки в данных."
    },
    {
      question: "Какой принцип лежит в основе работы кэш-памяти?",
      options: [
        "Принцип случайности",
        "Принцип локальности",
        "Принцип последовательности",
        "Принцип приоритета"
      ],
      correct: 1,
      explanation: "Кэш-память основана на принципе локальности - программы склонны обращаться к близким данным."
    }
  ],
  'computing-systems': [
    {
      question: "Какой тип вычислительной системы использует несколько процессоров с общей памятью?",
      options: ["Многопроцессорная система", "Кластер", "Грид-система", "Облачные вычисления"],
      correct: 0,
      explanation: "Многопроцессорная система (multiprocessor) - архитектура с несколькими процессорами, разделяющими общую память."
    },
    {
      question: "Что означает аббревиатура NUMA?",
      options: [
        "Non-Uniform Memory Access",
        "Network Unified Memory Architecture", 
        "New Universal Memory Array",
        "Non-Universal Memory Allocation"
      ],
      correct: 0,
      explanation: "NUMA (Non-Uniform Memory Access) - архитектура с неравномерным доступом к памяти."
    },
    {
      question: "Какая топология сети имеет наименьший диаметр?",
      options: ["Линейная", "Кольцевая", "Звездообразная", "Полносвязная"],
      correct: 3,
      explanation: "Полносвязная топология имеет диаметр 1, так как каждый узел напрямую соединен с каждым."
    },
    {
      question: "Что такое кластер в вычислительных системах?",
      options: [
        "Один мощный компьютер",
        "Группа соединенных компьютеров, работающих как единая система",
        "Специализированный процессор",
        "Тип операционной системы"
      ],
      correct: 1,
      explanation: "Кластер - группа соединенных компьютеров, работающих совместно как единая система."
    },
    {
      question: "Какой тип параллелизма описывает таксономия Флинна MIMD?",
      options: [
        "Много инструкций, одни данные",
        "Одна инструкция, много данных", 
        "Много инструкций, много данных",
        "Одна инструкция, одни данные"
      ],
      correct: 2,
      explanation: "MIMD (Multiple Instruction, Multiple Data) - много инструкций обрабатывают много потоков данных."
    },
    {
      question: "Что такое MPP система?",
      options: [
        "Многопользовательская система",
        "Массивно-параллельная система",
        "Многопроцессорная система",
        "Многопоточная система"
      ],
      correct: 1,
      explanation: "MPP (Massively Parallel Processing) - массивно-параллельная система с большим количеством процессоров."
    },
    {
      question: "Какое преимущество имеют системы с распределенной памятью?",
      options: [
        "Простота программирования",
        "Высокая масштабируемость",
        "Низкая стоимость",
        "Высокая скорость обмена данными"
      ],
      correct: 1,
      explanation: "Системы с распределенной памятью обладают высокой масштабируемостью, так как не имеют общих ресурсов."
    },
    {
      question: "Что означает SIMD в классификации Флинна?",
      options: [
        "Single Instruction, Multiple Data",
        "Simple Instruction, Multiple Data",
        "Single Input, Multiple Data",
        "Sequential Instruction, Multiple Data"
      ],
      correct: 0,
      explanation: "SIMD (Single Instruction, Multiple Data) - одна инструкция обрабатывает множество данных одновременно."
    },
    {
      question: "Какой тип кластера обеспечивает высокую доступность сервисов?",
      options: ["HPC кластер", "HA кластер", "Load balancing кластер", "Grid кластер"],
      correct: 1,
      explanation: "HA (High Availability) кластер обеспечивает высокую доступность сервисов за счет резервирования."
    },
    {
      question: "Что такое когерентность кэшей в многопроцессорных системах?",
      options: [
        "Синхронизация тактовых частот",
        "Согласованность данных в кэшах разных процессоров",
        "Одинаковый размер кэшей",
        "Совместное использование кэшей"
      ],
      correct: 1,
      explanation: "Когерентность кэшей обеспечивает согласованность данных в кэшах разных процессоров."
    },
    {
      question: "Какая топология обеспечивает наилучшую отказоустойчивость?",
      options: ["Звезда", "Кольцо", "Полносвязная", "Дерево"],
      correct: 2,
      explanation: "Полносвязная топология обеспечивает максимальную отказоустойчивость за счет множественных путей."
    },
    {
      question: "Что такое закон Амдала?",
      options: [
        "Закон о производительности процессоров",
        "Закон об ограничении ускорения при параллелизации",
        "Закон о потреблении энергии",
        "Закон о размере кэша"
      ],
      correct: 1,
      explanation: "Закон Амдала описывает теоретическое ограничение ускорения программы при параллельном выполнении."
    },
    {
      question: "Какой протокол часто используется для связи узлов в HPC кластерах?",
      options: ["Ethernet", "InfiniBand", "Wi-Fi", "Bluetooth"],
      correct: 1,
      explanation: "InfiniBand обеспечивает высокую пропускную способность и низкую задержку для HPC кластеров."
    },
    {
      question: "Что такое грид-вычисления?",
      options: [
        "Вычисления на графических процессорах",
        "Распределенные вычисления на географически разнесенных ресурсах",
        "Вычисления в сетке процессоров",
        "Параллельные вычисления на одном компьютере"
      ],
      correct: 1,
      explanation: "Грид-вычисления объединяют географически распределенные вычислительные ресурсы."
    },
    {
      question: "Какая проблема характерна для систем с общей памятью при увеличении числа процессоров?",
      options: [
        "Увеличение энергопотребления",
        "Конфликты доступа к памяти",
        "Уменьшение надежности",
        "Увеличение размера"
      ],
      correct: 1,
      explanation: "При увеличении числа процессоров возрастают конфликты доступа к общей памяти, снижая производительность."
    }
  ]
};